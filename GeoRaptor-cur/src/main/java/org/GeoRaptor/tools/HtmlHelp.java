package org.GeoRaptor.tools;

import java.awt.Font;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.border.TitledBorder;
import javax.swing.text.DefaultCaret;
import javax.swing.text.Position;


/*
 * HtmlHelp.java
 *
 * Created on 09/06/2012, 6:43:28 PM
 */

/**
 *
 * @author Simon
 */
public class HtmlHelp extends javax.swing.JPanel {

	private static final long serialVersionUID = 6043956576785109164L;
	
	private String dialogStripe = "Help";
    private String titleText = "";
    private String htmlText = "";
    private String borderText = "";
    
    /** Creates new form HtmlHelp */
    public HtmlHelp(String _title,
                    String _border,
                    String _html) {
        initComponents(); 

        this.setTitleText(_title);
        this.setBorderText(_border);
        this.setHtmlText(_html);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        spHtml = new javax.swing.JScrollPane();
        tpHtml = new javax.swing.JTextPane();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Metadata Manager Help", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        setPreferredSize(new java.awt.Dimension(860, 685));

        spHtml.setBackground(new java.awt.Color(204, 204, 204));
        spHtml.setBorder(null);
        spHtml.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        spHtml.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        spHtml.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spHtml.setMaximumSize(null);
        spHtml.setMinimumSize(null);
        spHtml.setPreferredSize(new java.awt.Dimension(830, 656));

        tpHtml.setContentType("text/html");
        tpHtml.setEditable(false);
        tpHtml.setText("<html>This dialog box is used to manage spatial metadata in the xxx_SDO_GEOM_METADATA views.<p>The dialog can be accessed in two ways:<ol><li>By right clicking on a _textPane/Column/View/Synonym/Materialised View, and selecting <i>GeoRaptor->Manage Metadata</i></li><li>By selecting <i>View->GeoRaptor->Manage All Metadata</i></li></ol></p><h4><u>Current Object Metadata</u></h4><p> The top half of the dialog displays the details for the currently selected object.  If any metadata exists for the object then it is displayed in the <i>Dim Array Elements</i> section.</p><p><b>SRID:</b> To change the SRID for the current object metadata, enter the new value in the text box, or use the <i>Select SRID</i> dialog to choose one.</p><b>Connection:</b> Use the <i>Name</i> drop down list to switch to another open connection.  If new connections have been opened since the modal Manage Metadata dialog was first launched, use the <i>Reload Connections</i> button to refresh the list of available open connections.</p><p><b>Calculate Elements:</b> By clicking this button, a SQL query is executed to calculate the bounds of the SDO_GEOMETRY data in the current object.  Depending on the size of the object, this query can take a while to execute.  Use the <i>Sample</i> slider to indicate the percentage of the object data to be queried.  When complete, the results are populated in the <i>Dim Array Elements</i> _textPane.</p><p><b>Edit Dim Array Elements:</b> To enter specific values, type directly in the _textPane.  To delete an element, select a row and press the <i>Delete</i> key.  Use the <i>Add Element</i> button to add a new row to the _textPane.</p><p><b>Apply:</b> After the metadata values for an object have been set, press the <i>Apply</i> button to run the update statement against the XXX_SDO_GEOM_METADATA view.  Note that pressing <i>Close</i> does <u>not</u> result in the update statement being run, therefore the <i>Apply</i> button must be used.</p><h4><u>All metadata for user <i>xxx</i></u></h4><p> The bottom half of the dialog displays a colour-coded list of all the <i>existing</i> and <i>potential</i> metadata for objects containing SDO_GEOMETRY columns.  The SQL used to populate the _textPane queries the XXX_SDO_GEOM_METADATA and XXX_TAB_COLUMNS views to retrieve a list of all metadata entries along with all objects with columns of data type SDO_GEOMETRY.</br>Entries in the _textPane are colour-coded depending based on the following: <ul><li><font style=\"background-color: #A7F287\">Database Object Has Metadata </font></br>An objects exists in XXX_TAB_COLUMNS with data type SDO_GEOMETRY and a corresponding entry exists in XXX_SDO_GEOM_METADATA.</li><li><font style=\"background-color: #FF5053\">No Database Object - Orphan Metadata </font></br>An entry exists in XXX_SDO_GEOM_METADATA but no corresponding object exists in XXX_TAB_COLUMNS with data type SDO_GEOMETRY.</li><li><font style=\"background-color: #716FFD\">Database Object with Geometry - No Metadata</font></br>An objects exists in XXX_TAB_COLUMNS with data type SDO_GEOMETRY but no corresponding entry exists in XXX_SDO_GEOM_METADATA.</li></ul> Check/Uncheck the colour-coded check boxes under the _textPane to toggle display of entries matching that criteria.<p> Note that the colours can be changed in <i>Tools->Preferences->GeoRaptor</i></p><p> If the <b>All schemas</b> checkbox is selected, then the _textPane displays entries for ALL_* views.  When deselected, the _textPane displays entries for USER_* views.</p><b>_textPane selection</b><ul><li> Right-click on a row in the _textPane and select <i>Copy entry to clipboard</i> to copy the row contents to the clipboard.</li><li> Right-click on a row in the _textPane and select <i>Delete Entry</i> to delete the entry from the XXX_SDO_GEOM_METADATA view.</li><li> Right-click on a row in the _textPane and select <i>Copy diminfo values to current metadata record </i> to load the metadata for the selected object into the <i>Dim Array Elements</i> _textPane for the object whose metadata is currently being managed.</li><li> Right-click on a row in the _textPane and select <i>Switch to managing this meatdata entry</i> to make this the Current Object for which metadata is being managed. Note that double clicking on a row has the same affect.</li></ul></p></html>");
        tpHtml.setMinimumSize(new java.awt.Dimension(0, 0));
        tpHtml.setPreferredSize(new java.awt.Dimension(840, 640));
        spHtml.setViewportView(tpHtml);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spHtml, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spHtml, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane spHtml;
    private javax.swing.JTextPane tpHtml;
    // End of variables declaration//GEN-END:variables
    
    public void display() {
        JFrame frame = new JFrame(this.dialogStripe);
        frame.setTitle(this.titleText);
        // Set scroll to beginning (top) of html
        // Scroll the area into view
        // this.spHtml.scrollRectToVisible(new Rectangle(0,0));
        DefaultCaret caret = (DefaultCaret)tpHtml.getCaret();
        caret.setDot(0, Position.Bias.Forward);
        caret.setUpdatePolicy(DefaultCaret.UPDATE_WHEN_ON_EDT);
        frame.add(this);
        frame.pack();
        frame.setAlwaysOnTop(true);
        frame.setVisible(true);
    }
    
    public void setTitleText(String _titleText) {
        this.titleText = _titleText;
    }

    public String getTitleText() {
        return titleText;
    }

    public void setHtmlText(String htmlText) {
        this.htmlText = htmlText;
        this.tpHtml.setText(this.htmlText);
    }

    public String getHtmlText() {
        return htmlText;
    }

    public void setBorderText(String _borderText) {
        this.borderText = _borderText;
        setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1), 
                                                   this.borderText, 
                                                   TitledBorder.DEFAULT_JUSTIFICATION, 
                                                   TitledBorder.DEFAULT_POSITION, 
                                                   new Font("SansSerif", 1, 14)));
    }

    public String getBorderText() {
        return borderText;
    }

}
