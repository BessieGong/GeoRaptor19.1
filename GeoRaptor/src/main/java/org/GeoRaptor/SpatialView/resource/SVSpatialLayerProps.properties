DIALOG_LABEL=Details

BUTTON_APPLY=Apply
TAB_MBR=MBR
TAB_SQL=SQL
TAB_PROPERTIES=Properties
TAB_FILL=Area
TAB_STROKE=Line
TAB_POINT=Point
TAB_SELECTION=Selection
TAB_LABEL=Labeling
TAB_ROTATION=Rotation

LABEL_ATTRIBUTES_NOT_NONE=No label attribute selected for styling
LABEL_DB_CONNECTION=DB Connection:
LABEL_LAYER_NAME=Name:
LABEL_GEOCOLUMN_NAME=Geometry column:
ERROR_GEOCOLUMN_NAME=Geometry column cannot be null
LABEL_SRID=SRID:
BUTTON_DISCOVER=Discover
lblTolerance=Tolerance:
lblPrecision=Ordinate Precision:

LABEL_COLUMNS_PULLDOWN=Column:
LABEL_ROTATION_COLUMN=Column:
LABEL_DEGREES=Degrees
LABEL_RADIANS=Radians
LABEL_MARKER_ROTATION=Rotate:
TT_MARKER_ROTATION=Rotate point marker symbol, label text or both?
TT_DEGREES=Value in column is in degrees
TT_RADIANS=Value in column is in radians
TT_LABEL_COLUMNS_PULLDOWN=Select column in table to use as label    
TT_ROTATION_COLUMNS_PULLDOWN=If label column selected, select column in table that contains rotation angle (otherwise 0)

ERROR_NO_CONNECTION_FOR=No connection available to execute {0}
ERROR_TEXT_SIZE=Size must be between 4 and 72 points inclusive
ERROR_LINE_WIDTH=Size must be between 1 and 15 pixels inclusive
ERROR_MAP_SCALE=MapScale must be numeric and between 0 and 10,000,000 (HiScale can be empty).
LABEL_COLUMN_STYLING=Style
LABEL_POSITION=Position

# SQL
LABEL_RECALCULATE_MBR=Recalculate MBR (next draw)
TT_LAYER_MBR=Minumum Bounding Rectangle (MBR) or extent of layer
LABEL_INIT_SQL=Initial SQL
LABEL_FETCH_SIZE=Fetch size:
LABEL_PIXEL_FILTERING=Pixel Filtering:

LABEL_FILL=Fill:
LABEL_COLUMN_COLOR=Column
LABEL_CONSTANT_COLOR=Constant
BUTTON_SHADE_COLOR=Color

LABEL_NONE=None
LABEL_LINE_WIDTH=Width:
BUTTON_LINE_COLOR=Color

BORDER_ARROWS=Segment Arrows
LABEL_ARROW_NONE=None
LABEL_ARROW_START=Start
LABEL_ARROW_MIDDLE=Middle
LABEL_ARROW_END=End
LABEL_ARROW_END_ONLY=Line End

BORDER_MARK_VERTICES=Vertex and Segment Styling
LABEL_MARK_START=Start
LABEL_MARK_ALL=All
LABEL_MARK_ORIENTED=Orient Label

BUTTON_POINT_COLOR=Color
LABEL_POINT_MARKER=Marker:
LABEL_POINT_SIZE=Size:

BUTTON_SELECTION_COLOR=Color
LABEL_SELECT_LINE_WIDTH=Line width:
LABEL_SELECT_POINT_SIZE=Point Size:
LABEL_SELECT_LINE_STYLE=Line Style:

BORDER_GEOM_OUTPUT=Geometry Output
LABEL_OUT_FILE=File:
LABEL_OUT_SAVE=Save?
BUTTON_GEOM_OUTPUT=....
BUTTON_CLOSE=Close
BUTTON_HELP=Help

LABEL_POINT=Label Point:
LABEL_TRANSPARENCY=Value: 
TT_VALUE_0_1=Value must be between 0 and 1
TT_VALUE_MILLISECONDS=Use %MS% for current milliseconds number
LABEL_OPAQUE=Solid
LABEL_TRANSPARENT=Clear

SPATIAL_LAYER_PROP_SQL_TEST_ERROR=Error in SQL query: {0}\nSQL: {1}.
SPATIAL_LAYER_PROP_LINE_WIDTH=Invalid line width. It must be 1 or more.
SPATIAL_LAYER_PROP_TRANS_RANGE=Transperancy value be between 0 and 1.
SPATIAL_LAYER_PROP_POINT_SIZE=Invalid point size. It must be 1 or more.

# LabelPositionForm
LABEL_OFFSET=Offset
TT_OFFSET=Offset in pixels of label from vertex
BUTTON_CHANGE=Change
BORDER_LABEL_VERTICES=Vertices

PREVIEW_TEXT=Text

MARK_POSITION=Position: {0}
MARK_OFFSET=Offset: {0}

# GraphicTheme
SELECTION_RESULT={0} query against {1} selected {2} features.
QUERY_SPATIAL_ERROR=Error: \n{0}\n\nwhen excuting spatial query\n\n{1}
QUERY_EXECUTE_SPATIAL=Executing Spatial Query....
QUERY_WORKING=Working, please wait...

HELP_TITLE=Spatial Layer Property Help
HELP_BORDER=Property Help
HELP_CONTENT=<html><h2>Layer Properties</h2><p>This dialog box is used to define the properties of a data layer in the map view. The dialog is accessed by right-clicking on a layer.</p><img src="%s" alt="Layer Properties" border="1"/><hr/><h3><u>Details</u></h3><p>The top section of the dialog displays the details for the currently selected layer.</p><p>The current DB Connection is shown in a drop down list. To change the connection for the layer, select an alternative connection from the drop down list. If a new connection is opened while the Layer Properties dialog is open, then use the Refresh button to update the list.</p><p>The capability to change the connection for a layer is useful in scenarios where you may have data with the same structure in both a test and production environment. Configure the layers initially for one environment and then you have the capability to switch between the various connections to access the data in different environment.</p><p>Edit the <b>Name</b> to change the name of the layer as it appears in the map view layer tree control.</p><p>The <b>Geometry Column</b> cannot be edited as it is the name inherited from the sdo_geometry column in the query that created this layer.</p><p><b>Tolerance/Precision</b>Tolerance is used to associate a level of precision with spatial data. Tolerance reflects the distance that two points can be apart and still be considered the same (for example, to accommodate rounding errors).<br>The un-editable tolerance is the sdo_tolerance drawn from the X/Long ordinate in the SDO_GEOM_METADATA entry. For non-geodetic data it can be assumed to also describe the decimal precision of an individual ordinate (not quite, but close enough). GeoRaptor often rounds ordinates (especially when constructing WKT, GML, exporting/importing, Copy To Clipboard etc.) and so uses the precision value. The reason the precision field is editable is for two reasons:<br><ol><li>A planar ordinate precision may be different from an sdo_tolerance describing "distance that two points can be apart". Thus is allows the user to modify the precision to suit the need.</li> <li>For geodetic data an sdo_tolerance can only be described to a maximum of 0.005 (say 1cm). This equates to a decimal precision of 2. Clearly this is the wrong value to use when rounding long/lat ordinates. Thus, for long/lat one would want the ordinates to be rounded to something more like 6,7,8 or 9. Set according to the precision of your coordinates.</li></ol></p><p><b>SRID Type</b> is used to inform measurement activities. This is automatically discovered when view object created but a <i>Discover</i> button is provided for manual checking.</p><p>GeoRaptor displays an icon in the map view layer tree control that reflects the <b>Geometry Type</b>. The value is automatically set by checking the geometry type of the first non-null geometry in the data source. The value can be changed by selecting from the list.</p><p>There is an option to <b>Recalculate MBR</b> at next redraw. This is useful in cases where a large MBR is applied in the USER_SDO_GEOM_METADATA, but the data for the layer is only contained within a small area.</p><hr/><h3><u>Properties</u></h3><p>The bottom section of the dialog has a series of tab, each providing a set of properties for the layer.</p><h4><u>SQL</u></h4><p>The SQL window displays the base SQL that is used for retrieving data for the map layer.</p><p>(This tab will <b>not</b> appear if a dynamic query (graphic theme) executed in a SQL Worksheet is the source of the data.)<p/><p>This SQL can be modified as follows:<ol> <li>The number of attributes can be modified as long as the geometry column's name remains the same as the layer and in the metadata.</li> <li>The SDO_FILTER clause must not be edited in any way.</li> <li>Additional predicates are allowed either before or after the SDO_FILTER in the inner query or in the outside SQL if efficient. If a user modifies the predicates they are reponsible for ensuring the query runs correctly and quickly.</li></ol></p><p>To draw data on the map, the base SQL is wrapped in an outer query as follows:</p><code><pre>SELECT rowid, [geometry column] as GEOMETRY<br>  FROM (SELECT rowid,[other columns from the table],[geometry column] as GEOMETRY<br>          FROM [the table/view for the layer] t<br>         WHERE SDO_FILTER([geometry column],[SDO_GEOMETRY for the current map window extent],'querytype=WINDOW') = 'TRUE'<br>       )</pre></code><p>To identify a feature on the map, the base SQL is wrapped in an outer query as follows:</p><code><pre>WITH searchDistance As (<br> SELECT MDSYS.SDO_GEOM.SDO_DISTANCE([point on map to identify]/*search pt1*/,[point on map to identify]/*DistancePoint*/,[layer tolerance]/*tol*/,[map unit]/*unit*/) AS dist<br>   FROM DUAL<br>)<br>SELECT /*+ ORDERED*/ a.*<br>  FROM (SELECT rowid,[other columns from the table],t.[geometry column] as GEOMETRY<br>          FROM [the table/view for the layer] t<br>         WHERE SDO_FILTER(t.[geometry column],[SDO_GEOMETRY for the current map window extent],'querytype=WINDOW') = 'TRUE'<br>       ) a,<br>       [the table/view for the layer] b,<br>       searchDistance s<br> WHERE SDO_NN(b.[geometry column],[point on map to identify],'sdo_num_res=12',1) = 'TRUE'<br>   AND SDO_NN_DISTANCE(1) < s.dist<br>   AND b.rowid = a.rowid<br> ORDER BY sdo_nn_distance(1)</pre></code><p>The <b>Fetch size</b> can be specified in the text box below the SQL text area. This is the maximum number of features per client/server exchange. So, if you have point data you might want to increase the fetch size to 300; if small polygons or lines, perhaps 200; large polygons 100. 150 seems to be about right as a universal setting.</p><p>By checking the <b>Pixel Filtering</b> option, the <i>min_resolution</i> parameter is added to the SDO_FILTER query. The min_resolution keyword includes only geometries for which at least one side of the geometry's MBR is equal to or greater than the specified value. For example, min_resolution=10 includes only geometries for which the width or the height (or both) of the geometry's MBR is at least 10. The Pixel Filtering option can be used to exclude geometries that are too small to be of interest.</p><hr/><h4><u>Point</u></h4><p>The Point tab contains the options that determine how points are displayed on the map.</p><img src="%s" alt="Layer Properties - Point tab" border="1"/><br><u>Size</u> <ul> <li><b>Fixed:</b> Enter a number between 4 and 72, or use the slider, to indicate the pixel size of how points will be rendered on the map.</li> <li><b>Column:</b> If a numeric column in the table/view contains values between 4 and 72, then it can be used to drive the pixel size of the points.</li></ul> <u>Colour</u> <ul> <li><b>Fixed:</b> Use the colour chooser to select a colour for the point.</li> <li><b>Random:</b> Allow GeoRaptor to randomly colour each point.</li> <li><b>Column:</b> If a column in the table/view contains a colour value that matches the GeoRaptor Colour criteria (see bottom of page), then it can be used to drive the colour of the points.</li></ul> <p><b>Marker:</b> Select from one of the predefined list of marker styles to be applied to each point.</p><hr/><h4><u>Stroke</u></h4> <p>The Stroke tab contains the options that determine how lines and polygon outlines are displayed on the map.</p><img src="%s" alt="Layer Properties - Stroke tab" border="1"/><br><u>Size and Style</u> <ul> <li><b>Width:</b> Enter a number between 1 and 16, or use the slider, to indicate the pixel width of how lines will be rendered on the map.</li> <li><b>Style:</b> Select a line style from the list. Options are: Solid, Dash, Dot, Dashdot, Dashdotdot, Solid rounded.</li></ul><u>Colour</u> <ul> <li><b>Solid:</b> Use the colour chooser to select a colour for the line.</li> <li><b>Random:</b> Allow GeoRaptor to randomly colour each line.</li> <li><b>Column:</b> If a column in the table/view contains a colour value that matches the GeoRaptor Colour criteria (see bottom of page), then it can be used to drive the colour of the lines.</li></ul><u>Vertices</u> <ul> <li><b>Start:</b> Select from one of the predefined list of marker styles to be applied to the first vertex of the line.</li> <li><b>All:</b> Select from one of the predefined list of marker styles to be applied to each vertex of the line <i>apart</i> from the first. Note that the colour/size of the marker is defined in the Point tab</li></ul><img src="%s" alt="Layer Properties - Stroke Vertices" border="1"/><br><p><u>Arrows</u></p>Select whether arrows are to be shown on the line: <ul> <li><b>None:</b> Don't show arrows at all.</li> <li><b>Start:</b> Show an arrow at the start of each segment.</li> <li><b>Middle:</b> Show an arrow at the middle of each segment.</li> <li><b>End:</b> Show an arrow at the end of each segment.</li> <li><b>End Only:</b> Show an arrow at the end of the whole line.</li></ul><p>Press the <b>Apply</b> button to see the changes on the map without having to close the Layer Properties dialog.</p><hr/> <h4><u>Fill</u></h4><p>The Fill tab contains the options that determine how polygons are filled on the map.</p><img src="%s" alt="Layer Properties - Fill tab" border="1"/><br><u>Colour</u> <ul> <li><b>None:</b> The polygon interior is not filled with a colour.</li> <li><b>Random:</b> Allow GeoRaptor to randomly colour the fill for each polygon.</li> <li><b>Constant:</b> Use the colour chooser to select a polygon fill colour.</li> <li><b>Column:</b> If a column in the table/view contains a colour value that matches the GeoRaptor Colour criteria (see bottom of page), then it can be used to drive the polygon fill colours.</li></ul><p>Use the <b>Transparency</b> slider to choose a value between 0 (Solid) and 100 (Clear).</p><p>Press the <b>Apply</b> button to see the changes on the map without having to close the Layer Properties dialog.</p> <hr/><h4><u>Selection</u></h4><p>The Selection tab contains the options that determine how features are styled when they are selected on the map.</p><img src="%s" alt="Layer Properties - Selection tab" border="1"/><br><p><b>Point Size:</b> Enter a number between 4 and 72, or use the slider, to indicate the pixel size of how points will be rendered on the map.</p><p><b>Line Width:</b> Enter a number between 1 and 16, or use the slider, to indicate the pixel width of how lines will be rendered on the map.</p><p><b>Colour:</b> Use the colour chooser to select a colour that will be applied to selected features.</li></p><p>Use the <b>Transparency</b> slider to choose a value between 0 (Solid) and 100 (Clear) that will be applied to selected polygons.</p> <p><b>Line Style:</b> Select a line style from the list. Options are: Solid, Dash, Dot, Dashdot, Dashdotdot, Solid rounded.</li></p><p>Check the <b>Use Selection Colouring</b> option if you want to apply the Selection colouring style to all features on the map.</li></p><p>Press the <b>Apply</b> button to see the changes on the map without having to close the Layer Properties dialog.</p><hr/><h4><u>Labelling</u></h4><p>The Labelling tab contains the options that determine how features are labelled on the map.</p><img src="%s" alt="Layer Properties - Labelling tab" border="1"/><br><u>Vertices</u><br>Each <b>Vertex</b> of a linestring/polygon can be labelled with the following elements: <ul> <li><b>None:</b>Don't label the vertices - this is the default</li> <li><b>&lt;Id&gt;:</b>The vertex Id</li> <li><b>(X,Y[,Z[,M]]):</b>The X,Y ordinate values and the Z and M if they exist</li> <li><b>&lt;Id&gt; (X,Y[,Z[,M]]):</b>The vertex Id followed on the same line by X,Y ordinate values and the Z and M if they exist</li> <li><b>&lt;Id&gt;<br>(X,Y[,Z[,M]]):</b>The vertex Id followed on the next line by X,Y ordinate values and the Z and M if they exist</li> <li><b>Cumulative Length:</b>The cumulative length of the line/polygon boundary</li> <li><b>(Z):</b>The Z ordinate</li> <li><b>(M):</b>The M value</li></ul><p>Check the <b>Orient Label</b> option to rotate the labels to the feature being drawn.</p><img src="%s" alt="Layer Properties - Vertex labelling with Measure" border="1"/><br><p>Each <b>Segment</b> of a linestring/polygon can be labelled with the following elements: <ul> <li><b>None:</b>Don't label the segments - this is the default</li> <li><b>Segment_Length:</b>The length of the individual segment</li> <li><b>Cumulative_Length:</b>Cumulative length of the line/polygon boundary</li> <li><b>Bearing:</b>The bearing value (approximate for geodetic/geographic data)</li> <li><b>Bearing and Distance</b>The bearing and distance value (approximate for geodetic/geographic data)</li><li><b>Segment_Id</b> The segment identifier starting at one (segments are the two vertex line elements that collectively describe a whole linestring).</li></ul></p><img src="%s" alt="Layer Properties - Vertex labelling" border="1"/><br><p>Click the buttons to set the <b>Position / Offset</b> and <b>Text Style</b> of the Vertex and Segment labelling options.</p><p>Optionally, enter a value for <b>Scale Lo:</b> and <b>Hi:</b> to control the scale at which labels are displayed. The low scale value must be 0 or greater. The high scale value can be anything greater than 0. If the high scale value is left blank then only the low scale will be applied.</p><u>Geometry Label</u><br><p>Select a <b>Column</b> from the table/view that will be used for the geometry label values. Many column data types are supported in addition to CHAR and VARCHAR2.</p><p>The <b>Label Position</b> to be used when drawing labels can be set by clicking the <b>Change</b> button.</p><img src="%s" alt="Layer Properties - Label Position" border="1"/><br><p>Positioning is set via the Top Left (TL), Top Centre (TC), Top Right (TR), Centre Left (CL), Centre Centre (CC), Centre Right (CR), Bottom Left (BL), Bottom Centre (BC), Bottom Right (BR) positioning. Offset values between 0 and 10 can be selected.</p><p>The <b>Text Style</b> to be used when drawing labels can be set by clicking the <b>Change</b> button.</p><img src="%s" alt="Layer Properties - Label Styler" border="1"/><br><ul> <li>Various fonts and sizes are supported</li> <li>Text can have additional Bold, Italic, Underlined and Strike-through styling</li> <li>Change foreground colour (variable transparency) of text</li> <li>Setting background colour (variable transparency) creates coloured 'swatch' or rectangle underneath the text when drawing</li></ul><p>Select from the <b>Label Point</b> drop down list to indicate where the label should be displayed.</p><ul> <li><b>FIRST_VERTEX:</b>The label is displayed at the first vertex of the feature <li><b>MIDDLE_VERTEX:</b> The label is displayed at the middle vertex of the feature <li><b>END_VERTEX:</b> The label is displayed at the end vertex of the feature <li><b>JTS_CENTROID:</b> GeoRaptor displays the label at a location generated by a call to centroid function of the Java Topology Suite. <li><b>SDO_POINT:</b> For line, polygon, multi-point/line/polygon geometries that store their coordinates in sdo_ordinate_array, GeoRaptor will label the feature with the FIRST/MIDDLE/END_VERTEX or JTS_CENTROID, if the sdo_point is not filled in. If, however, the sdo_point is filled in, GeoRaptor will use it to label the feature if SDO_POINT is selected as the Label Point.</ul><hr/><h4><u>Rotation</u></h4><p>The Rotation tab contains the options that determine how text and point features are rotated on the map.</p><img src="%s" alt="Layer Properties - Rotation tab" border="1"/><br><p>Select <b>Degrees</b> or <b>Radians</b> to indicate how rotation values are to be specified. Degree values are rotated clockwise from north, while radian values are rotated clockwise from east.</p><p>Select a value from the <b>Rotate</b> drop down list to indicate whether the rotation should be applied to <b>Markers</b>, <b>Labels</b>, <b>Both</b> or <b>None</b>.</p><p>If a numeric <b>Column</b> in a table contains rotation angle values in degrees or radians, then it can be selected from the drop down list. If no rotation column is available all text is rendered at 0 degrees (i.e. to the north) or 0 radians (i.e. to the east).</p><hr/><h4><u>Query Layer</u></h4><p>The Query Layer tab is available only for layers defined by a spatial query. To create a Query Layer, right-click on a layer and select <b>Spatial Query</b>. Select the type of spatial query to run, digitise the query geometry, and click <b>Execute</b> on the <b>Spatial Query Review</b> dialog.</p><p>The Query Layer tab provides an option to modify the query geometry by applying a buffer. To create a buffer around the digitised geometry, set the <b>Buffer Distance</b>, check the <b>Apply Buffer</b> and <b> Show Query Geometry</b> check boxes and press <b>Apply</b>.</p><p>The SDO Operator that the spatial query is based on can changed by selecting the operator from the drop down list. If multiple masks are required, then select SDO_RELATE and select the required masks from the list box.</p><img src="%s" alt="Layer Properties - Query Layer tab" border="1"/><br><hr /><h3><u>Additional Notes</u></h3><h4><u>Specify a Colour value in a column</u></h4><p>Colour values specified in a column can be either an integer or a string.<p/><p>If an integer, then it has to be capable of being converted to a Java Colour object which works as follows (this is similar to the way MapInfo does its colours):</p><p><i>An opaque RGB colour is created with the specified combined RGB value consisting of the red component in bits 16-23, the green component in bits 8-15, and the blue component in bits 0-7.</i><br><br>Such a value can be generated as follows:</i></p><code><pre>select ROUND(dbms_random.value(0,255),0) * 65536 +<br>       ROUND(dbms_random.value(0,255),0) * 256 +<br>       ROUND(dbms_random.value(0,255),0)<br>  from dual;</pre></code><p>The actual colour used in rendering depends on finding the best match given the colour space available for a particular output device. Alpha is defaulted to 255.</i></p><p>If a <b>string value</b> is provided then it must have one of the following two formats:<ol><li>r,g,b</li><li>r,g,b,a</li></ol></p><p>With the values for all being between 0 to 255, inclusive. An example of how to generate such a string follows:</p><code><pre>select ROUND(dbms_random.value(0,255),0) * 65536 +<br>       ROUND(dbms_random.value(0,255),0) * 256 +<br>       ROUND(dbms_random.value(0,255),0)<br>  from dual;</pre></code></html>

